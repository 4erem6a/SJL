any     = ? any character ? ;
digit   = ? any digit ? ;
letter  = ? any letter ? ;

number      = digit, { digit }, [ ',', digit, { digit } ] ;
character   = "'", any, "'" ;
identifier  = '$', digit | letter | '_', { digit | letter | '_' } ;

assignment statement        = identifier, '=', expression ;
print statement             = 'print' | 'println', [ 'char' ], expression, { ';', expression } ;
expression statement        = expression ;
union statement             = { statement } | '{', { statement }, '}';

statement                   = assignment statement | print statement | expression statement | union statement ;

binary operator             = '+', '-', '*', '/', '%' ;
unary operator              = '-' | '+' ;

number expression           = number | character ;
binary expression           = expression, binary operator, expression ;
unary expression            = unary operator, expression ;
variable expression         = identifier ;
input expression            = 'input', [ 'char' ] ;

expression                  = number expression
                                | binary expression
                                | unary expression
                                | variable expression
                                | input expression
                                | '(', expression, ')' ;

program = union statement ;